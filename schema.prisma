// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(cuid())
  name          String         @default("")
  lastName      String         @default("")
  email         String         @unique @default("")
  adminPassword String?
  localAuth     UserLocalAuth? @relation("User_localAuth", fields: [localAuthId], references: [id])
  localAuthId   String?        @unique @map("localAuth")
  role          UserRoleType?  @default(user)
  groups        Group[]        @relation("Group_members")
  createdAt     DateTime?      @default(now())
}

model UserLocalAuth {
  id                 String    @id @default(cuid())
  password           String    @default("")
  twoFaEmail         String    @default("")
  twoFaEmailSecret   String    @default("")
  twoFaEmailLastSent DateTime?
  user               User?     @relation("User_localAuth")
}

model Group {
  id      String @id @default(cuid())
  name    String @default("")
  members User[] @relation("Group_members")
}

model ChatSession {
  id        String    @id @default(cuid())
  sessionID String    @default("")
  createdAt DateTime?
}

model Inquiry {
  id                     String  @id @default(cuid())
  reasonOfApplication    String  @default("")
  diseases               String  @default("")
  medications            String  @default("")
  currentLivingSituation String  @default("")
  name                   String  @default("")
  email                  String  @default("")
  phone                  String  @default("")
  age                    Float?
  yearlyIncome           Float?
  gender                 String  @default("")
  address                String  @default("")
  sessionID              String  @default("")
  addresed               Boolean @default(false)
  remarks                String  @default("")
}

model Policy {
  id         String @id @default(cuid())
  sessionID  String @default("")
  name       String @default("")
  policyName String @default("")
  policyURL  String @default("")
}

enum UserRoleType {
  dev
  admin
  user
}
